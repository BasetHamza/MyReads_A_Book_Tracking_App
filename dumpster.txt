import React, {Component} from 'react' 
import { Link } from 'react-router-dom'
import * as BooksAPI from '../utils/BooksAPI'
import BookCard from './BookCard'
import * as _ from 'underscore'


class SearchBooks extends Component{

  constructor(props) {
    super(props);
    this.state = {
      query: '',
      books: [],
      searchTerms: ['Android', 'Art', 'Artificial Intelligence', 'Astronomy', 'Austen', 'Baseball', 
      'Basketball', 'Bhagat', 'Biography', 'Brief', 'Business', 'Camus', 'Cervantes', 'Christie', 
      'Classics', 'Comics', 'Cook', 'Cricket', 'Cycling', 'Desai', 'Design', 'Development', 'Digital Marketing', 
      'Drama', 'Drawing', 'Dumas', 'Education', 'Everything', 'Fantasy', 'Film', 'Finance', 'First', 'Fitness', 
      'Football', 'Future', 'Games', 'Gandhi', 'Homer', 'Horror', 'Hugo', 'Ibsen', 'Journey', 'Kafka', 'King', 
      'Lahiri', 'Larsson', 'Learn', 'Literary Fiction', 'Make', 'Manage', 'Marquez', 'Money', 'Mystery', 'Negotiate', 
      'Painting', 'Philosophy', 'Photography', 'Poetry', 'Production', 'Programming', 'React', 'Redux', 'River', 
      'Robotics', 'Rowling', 'Satire', 'Science Fiction', 'Shakespeare', 'Singh', 'Swimming', 'Tale', 'Thrun', 
      'Time', 'Tolstoy', 'Travel', 'Ultimate', 'Virtual Reality', 'Web Development', 'iOS']
    }
    
    this.handleInputThrottled = _.throttle(this.makeAPICall, 500)
  }

  state = {
    query: '',
    books: [],
    searchTerms: ['Android', 'Art', 'Artificial Intelligence', 'Astronomy', 'Austen', 'Baseball', 
    'Basketball', 'Bhagat', 'Biography', 'Brief', 'Business', 'Camus', 'Cervantes', 'Christie', 
    'Classics', 'Comics', 'Cook', 'Cricket', 'Cycling', 'Desai', 'Design', 'Development', 'Digital Marketing', 
    'Drama', 'Drawing', 'Dumas', 'Education', 'Everything', 'Fantasy', 'Film', 'Finance', 'First', 'Fitness', 
    'Football', 'Future', 'Games', 'Gandhi', 'Homer', 'Horror', 'Hugo', 'Ibsen', 'Journey', 'Kafka', 'King', 
    'Lahiri', 'Larsson', 'Learn', 'Literary Fiction', 'Make', 'Manage', 'Marquez', 'Money', 'Mystery', 'Negotiate', 
    'Painting', 'Philosophy', 'Photography', 'Poetry', 'Production', 'Programming', 'React', 'Redux', 'River', 
    'Robotics', 'Rowling', 'Satire', 'Science Fiction', 'Shakespeare', 'Singh', 'Swimming', 'Tale', 'Thrun', 
    'Time', 'Tolstoy', 'Travel', 'Ultimate', 'Virtual Reality', 'Web Development', 'iOS']
  }

  isASearchTerm(){
    let matches = this.state.searchTerms.map((str) => (
      str.toLowerCase().indexOf(this.state.query.toLowerCase())
    )).filter((res) => res > -1).length;

    return matches > 0;
  }

  makeAPICall(){
    BooksAPI.search(this.state.query)
      .then((books) => {
        this.setState(() => ({
          books
      }))
    })
  }

  updateQuery = (query) => {
      this.setState(() => ({
        query: query
      }))


      this.handleInputThrottled()
  }

  render(){
    console.log(typeof(this.state.books))
    return(
      <div className="search-books">
        <div className="search-books-bar">
          <Link
            className='close-search'
            to='/'>
              Close
          </Link>
          <div className="search-books-input-wrapper">
            <input 
              type="text" 
              placeholder="Search by title or author ..."
              value={this.state.query}
              onChange={(event) => this.updateQuery(event.target.value)}
            />
          </div>
        </div>
        <div className="search-books-results">
          <ol className="books-grid">
            {
              this.state.books.map((book) => (
                <li key={book.id}>
                  <BookCard 
                    book={book}
                    onUpdateShelves={this.props.onUpdateShelves}
                  />
                </li>
              )
              )
            }
          </ol>
        </div>
      </div>  
    )
  }
}

export default SearchBooks










import React, {Component} from 'react' 
import { Link } from 'react-router-dom'
import * as BooksAPI from '../utils/BooksAPI'
import BookCard from './BookCard'

class SearchBooks extends Component{

  state = {
    query: '',
    books: []
  }

  componentDidUpdate(prevState){
    /**
     * The server returns book objects with the following keys:
     * 
     * {title, subtitle, authors, publisher, publishedDate, description, industryIdentifiers, readingModes, 
     * pageCount, printType, categories, maturityRating, allowAnonLogging, contentVersion, panelizationSummary, 
     * imageLinks{smallThumbnail, thumbnail}, language, previewLink, infoLink, canonicalVolumeLink, id})
     */
    if (this.state.query.length > 0)
    {
      if (this.state.query !== prevState.query)
      {
        BooksAPI.search(this.state.query)
        .then((books) => {
          this.setState(() => ({
            books
          }))
        })
      }
    }
  }

  updateQuery = (query) => {
    this.setState(() => ({
      query: query
    }))    
  }

  render(){
    if (this.state.books.length > 0){
      console.log(this.state.books)
    }

    return(
      <div className="search-books">
        <div className="search-books-bar">
          <Link
            className='close-search'
            to='/'>
              Close
          </Link>
          <div className="search-books-input-wrapper">
            <input 
              type="text" 
              placeholder="Search by title or author ..."
              value={this.state.query}
              onChange={(event) => this.updateQuery(event.target.value)}
            />
          </div>
        </div>
        <div className="search-books-results">
          <ol className="books-grid">
            {
              this.state.books.map((book) => (
                <li key={book.id}>
                  <BookCard 
                    book={book}
                    onUpdateShelves={this.props.onUpdateShelves}
                  />
                </li>
              )
              )
            }
          </ol>
        </div>
      </div>  
    )
  }
}

export default SearchBooks





// With debounce

import React, {Component} from 'react' 
import { Link } from 'react-router-dom'
import _ from "lodash";

import * as BooksAPI from '../utils/BooksAPI'
import BookCard from './BookCard'


class SearchBooks extends Component{

/**
 * https://betterprogramming.pub/how-to-use-debounce-and-throttle-the-right-way-with-react-hooks-bf2c174728e
 * 
 **/ 

  constructor(props) {
    super(props);
    this.props = props;
    this.state = {
    query: '',
    books: []
    }
    this.debounceSearch = _.debounce(this.onChange, 300);
  }

  updateQuery = (query) => {
    this.setState(() => ({
      query: query
    })) 

    if (query)
    {
      this.debounceSearch();    
    } else
    {
      this.resetSearch()
    }
  }
  
  onChange = () => {
    console.log(true)
    BooksAPI.search(this.state.query.trim())
    .then((books) => {
      this.setState(() => ({
        books
      }))
    }).catch(err => alert(err))
  };

  resetSearch = () => {
    this.setState(() => ({
      books: []
    })) 
  }
  
  render(){
    return(
      <div className="search-books">
        <div className="search-books-bar">
          <Link
            className='close-search'
            to='/'>
              Close
          </Link>
          <div className="search-books-input-wrapper">
            <input 
              type="text" 
              placeholder="Search by title or author ..."
              value={this.state.query}
              onChange={(event) => this.updateQuery(event.target.value)}
            />
          </div>
        </div>
        <div className="search-books-results">
          <ol className="books-grid">
            {
              this.state.books.map((book) => (
                <li key={book.id}>
                  <BookCard 
                    book={book}
                    onUpdateShelves={this.props.onUpdateShelves}
                  />
                </li>
              )
              )
            }
          </ol>
        </div>
      </div>  
    )
  }
}

export default SearchBooks